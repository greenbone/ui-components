name: Build and test JavaScript

on:
  push:
    branches: [ master,  rollup_example_typescript ]
  pull_request:
    branches: [ master ]

jobs:
  testing:
    env:
      REPORT_DIR: reports
    name: Testing and upload coverage
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        #node-version: [10.x, 12.x, 14.x, 15.x]
        # 10.x for debian: https://packages.debian.org/buster/nodejs
        #          ubuntu lts: https://packages.ubuntu.com/focal/nodejs
        # 12.x for ubuntu-latest: https://packages.ubuntu.com/hirsute/nodejs
        # 14.x is recommended by https://nodejs.org/en/
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up node ${{ matrix.python-version }}
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"

      # See: https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

      # `--prefer-offline` gives cache priority
      - name: Install dependencies
        run: yarn install --prefer-offline

      - name: Run JavaScript tests
        env:
          JEST_JUNIT_OUTPUT_DIR: ${{ github.WORKSPACE }}/${{ env.REPORT_DIR }}
        run: yarn run test-ci
      - name: Load Lint Results
        uses: actions/download-artifact@v2
        with:
          name: lint
      - name: Submit test coverage to codecov.io
        uses: codecov/codecov-action@v1.5.0
        with:
          fail_ci_if_error: true
  linting:
    env:
      WORKSPACE: ${{ github.workspace }}
      REPORT_DIR: reports
    name: Linting
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up node ${{ matrix.python-version }}
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"

      # See: https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

      # `--prefer-offline` gives cache priority
      - name: Install dependencies
        run: yarn install --prefer-offline
      - name: Lint JavaScript files
        run: yarn lint --format junit -o ${{ github.WORKSPACE }}/${{ env.REPORT_DIR }}
      - name: Store Lint Results
        uses: actions/upload-artifact@v2
        with:
          name: lint
          path: ${{ github.WORKSPACE }}/${{ env.REPORT_DIR }}
  build:
    env:
      WORKSPACE: ${{ github.workspace }}
    name: Build ui-components
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v2.3.4
      # See: https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

      # `--prefer-offline` gives cache priority
      - name: Install dependencies
        run: yarn install --prefer-offline

  publish:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 14.x ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          registry-url: 'https://npm.pkg.github.com'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run test-ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}