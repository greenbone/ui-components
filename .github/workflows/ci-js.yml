{
  name: "Build, test and publish ui-components",

  on: {
    push: {
      branches: [ "master", "rollup_example_typescript" ]
    },
    "pull_request": {
      branches: [ "master" ]
    }
  },

  jobs: {
    testing: {
      env: { REPORT_DIR: "reports" },
      name: "Run all tests",
      runs-on: "ubuntu-latest",
      steps: [
        {
          uses: "actions/checkout@v2"
        },
        {
          name: "Set up node ${{ matrix.python-version }}",
          uses: "actions/setup-node@v2",
          with: {
            "node-version": "14.x"
          }
        },
        {
          name: "Get Yarn cache directory",
          id: "yarn-cache-dir-path",
          run: "echo \"::set-output name=dir::$(yarn cache dir)\""
        },
        {
          name: "Use Yarn cache",
          uses: "actions/cache@v2",
          id: "yarn-cache",
          with:
            {
              path: "${{ steps.yarn-cache-dir-path.outputs.dir }}",
              key: "${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}"
            }

        },
        {
          name: "Install dependencies",
          run: "yarn install --prefer-offline"
        },
        {
          name: "Run JavaScript tests",
          env:
            {
              JEST_JUNIT_OUTPUT_DIR: "${{ github.WORKSPACE }}/${{ env.REPORT_DIR }}"
            },
          run: "yarn run test-ci"
        }
      ]
    },
    linting: {
      env: { REPORT_DIR: "reports" },
      name: "Run eslint",
      runs-on: "ubuntu-latest",
      steps: [
        {
          uses: "actions/checkout@v2"
        },
        {
          name: "Set up node ${{ matrix.python-version }}",
          uses: "actions/setup-node@v2",
          with: {
            "node-version": "14.x"
          }
        },
        {
          name: "Get Yarn cache directory",
          id: "yarn-cache-dir-path",
          run: "echo \"::set-output name=dir::$(yarn cache dir)\""
        },
        {
          name: "Use Yarn cache",
          uses: "actions/cache@v2",
          id: "yarn-cache",
          with:
            {
              path: "${{ steps.yarn-cache-dir-path.outputs.dir }}",
              key: "${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}"
            }

        },
        {
          name: "Install dependencies",
          run: "yarn install --prefer-offline"
        },
        {
          name: "Run eslint",
          run: "yarn lint --format junit -o ${{ github.WORKSPACE }}/${{ env.REPORT_DIR }}"
        }
      ]
    },
    building: {
      env: { REPORT_DIR: "reports" },
      name: "Run build",
      runs-on: "ubuntu-latest",
      steps: [
        {
          uses: "actions/checkout@v2"
        },
        {
          name: "Set up node ${{ matrix.python-version }}",
          uses: "actions/setup-node@v2",
          with: {
            "node-version": "14.x"
          }
        },
        {
          name: "Get Yarn cache directory",
          id: "yarn-cache-dir-path",
          run: "echo \"::set-output name=dir::$(yarn cache dir)\""
        },
        {
          name: "Use Yarn cache",
          uses: "actions/cache@v2",
          id: "yarn-cache",
          with:
            {
              path: "${{ steps.yarn-cache-dir-path.outputs.dir }}",
              key: "${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}"
            }

        },
        {
          name: "Install dependencies",
          run: "yarn install --prefer-offline"
        },
        {
          name: "Run build",
          run: "yarn run build"
        }
      ]
    },
    publish: {
      env: { REPORT_DIR: "reports" },
      name: "Publish library",
      runs-on: "ubuntu-latest",
      steps: [
        {
          uses: "actions/checkout@v2"
        },
        {
          name: "Set up node ${{ matrix.python-version }}",
          uses: "actions/setup-node@v2",
          with: {
            "node-version": "14.x"
          }
        },
        {
          name: "Get Yarn cache directory",
          id: "yarn-cache-dir-path",
          run: "echo \"::set-output name=dir::$(yarn cache dir)\""
        },
        {
          name: "Use Yarn cache",
          uses: "actions/cache@v2",
          id: "yarn-cache",
          with:
            {
              path: "${{ steps.yarn-cache-dir-path.outputs.dir }}",
              key: "${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}"
            }

        },
        {
          name: "Install dependencies",
          run: "yarn install --prefer-offline"
        },
        {
          name: "Run build",
          run: "yarn run build"
        },
        {
          name: "Run publish",
          run: "npm publish"
        },
      ]
    }
  },

}
